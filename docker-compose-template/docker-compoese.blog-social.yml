version: "2.24.5"

services:
  postgres:
    image: postgres:latest
    container_name: blog-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: blog
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  minio:
    image: minio/minio
    container_name: minio
    restart: always
    command: server /data --address :8020 --console-address :8021
    environment:
      MINIO_ROOT_USER: account
      MINIO_ROOT_PASSWORD: password
    ports:
      - "8020:8020"
      - "8021:8021"
    volumes:
      - minio-data:/data
    networks:
      - app-network

  backend:
    build: /home/back-end
    container_name: blog-backend
    restart: always
    ports:
      - '4000:4000'
    depends_on:
      - postgres
      - minio
    env_file:
      - /home/.backend.env
    networks:
      - app-network

  frontend:
    build: /home/front-end
    container_name: blog-frontend
    restart: always
    ports:
      - '3000:3000'
    environment:
      CLIENT_PORT: 3000
      SERVICE_PORT: 4000
      NEXT_PUBLIC_ACCESS_TOKEN_NAME: token-access-key
      NEXT_PUBLIC_REFRESH_TOKEN_NAME: token-access-key
    networks:
      - app-network
    depends_on:
      - backend

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - certbot
      - frontend
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - app-network

volumes:
  postgres-data:
    driver: local

  minio-data:

networks:
  app-network:
    driver: bridge